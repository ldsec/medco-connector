swagger: "2.0"
info:
  description: "API of the MedCo connector, that orchestrates the query at the MedCo node and provides information about the MedCo network."
  version: "1.0.0"
  title: "MedCo Connector"
  contact:
    email: "medco@epfl.ch"
  license:
    name: "EULA"
    url: "https://raw.githubusercontent.com/ldsec/medco-connector/master/LICENSE"
basePath: "/medco"
tags:
  - name: "medco-network"
    description: "MedCo Network API"
  - name: "medco-node"
    description: "MedCo Node API"
  - name: "genomic-annotations"
    description: "Genomic Annotations Query API"
schemes:
  - "http"
consumes:
  - "application/json"
produces:
  - "application/json"
externalDocs:
  description: "MedCo Technical Documentation"
  url: "https://medco.epfl.ch/documentation"
security:
  - medco-jwt: []

paths:
  /network:
    get:
      tags:
        - "medco-network"
      summary: "Get network metadata."
      operationId: "getMetadata"
      responses:
        200:
          $ref: "#/responses/networkMetadataResponse"
        default:
          $ref: "#/responses/errorResponse"
      security:
        - medco-jwt: ["medco-network"]

  /node/explore/search/concept:
    post:
      tags:
        - "medco-node"
      summary: "Returns the children (concepts and modifiers) of a concept"
      operationId: "exploreSearchConcept"
      parameters:
        - $ref: "#/parameters/exploreSearchConceptRequest"
      responses:
        200:
          $ref: "#/responses/exploreSearchConceptResponse"
        default:
          $ref: "#/responses/errorResponse"
      security:
        - medco-jwt: [ "medco-explore" ]

  /node/explore/search/modifier:
    post:
      tags:
        - "medco-node"
      summary: "Returns the children of a modifier"
      operationId: "exploreSearchModifier"
      parameters:
        - $ref: "#/parameters/exploreSearchModifierRequest"
      responses:
        200:
          $ref: "#/responses/exploreSearchModifierResponse"
        default:
          $ref: "#/responses/errorResponse"
      security:
        - medco-jwt: [ "medco-explore" ]

  /node/explore/query:
    post:
      tags:
        - "medco-node"
      summary: "MedCo-Explore query to the node."
      operationId: "exploreQuery"
      parameters:
        - in: "query"
          name: "sync"
          description: "Request synchronous query (defaults to true)."
          type: "boolean"
          default: true
        - $ref: "#/parameters/exploreQueryRequest"
      responses:
        200:
          $ref: "#/responses/exploreQueryResponse"
        default:
          $ref: "#/responses/errorResponse"
      security:
        - medco-jwt: ["medco-explore"]

  /node/explore/query/{queryId}:
    get:
      tags:
        - "medco-node"
      summary: "Get status and result of a MedCo-Explore query."
      operationId: "getExploreQuery"
      parameters:
        - in: "path"
          name: "queryId"
          description: "Query ID"
          required: true
          type: "string"
      responses:
        200:
          $ref: "#/responses/exploreQueryResponse"
        404:
          description: "Query ID not found."
        default:
          $ref: "#/responses/errorResponse"
      security:
        - medco-jwt: ["medco-explore"]

  /node/status:
    get:
      tags:
        - "medco-node"
      summary: "Get info about node status."
      operationId: "getNodeStatus"
      responses:
        200:
          $ref: "#/responses/statusResponse"
        default:
          $ref: "#/responses/errorResponse"
      security:
        - medco-jwt: ["medco-node-status"]

  /genomic-annotations/{annotation}:
    get:
      tags:
        - "genomic-annotations"
      summary: "Get genomic annotations values."
      operationId: "getValues"
      parameters:
        - in: "path"
          name: "annotation"
          description: "Genomic annotation name."
          required: true
          type: "string"
          pattern: '^\w+$'
        - in: "query"
          name: "value"
          description: "Genomic annotation value."
          required: true
          type: "string"
          maxLength: 255
        - in: "query"
          name: "limit"
          description: "Limits the number of records retrieved."
          type: "integer"
          default: 10
          minimum: 0
      responses:
        200:
          description: "Queried annotation values."
          schema:
            type: "array"
            items:
              type: "string"
        404:
          description: "Annotation not found."
        default:
          $ref: "#/responses/errorResponse"
      security:
        - medco-jwt: ["medco-genomic-annotations"]

  /genomic-annotations/{annotation}/{value}:
    get:
      tags:
        - "genomic-annotations"
      summary: "Get variants corresponding to a genomic annotation value."
      operationId: "getVariants"
      parameters:
        - in: "path"
          name: "annotation"
          description: "Genomic annotation name."
          required: true
          type: "string"
          pattern: '^\w+$'
        - in: "path"
          name: "value"
          description: "Genomic annotation value."
          required: true
          type: "string"
          minLength: 1
        - in: "query"
          name: "zygosity"
          description: "Genomic annotation zygosity, if null defaults to all."
          type: "array"
          items:
            type: "string"
            enum:
              - heterozygous
              - homozygous
              - unknown
        - in: "query"
          name: "encrypted"
          description: "Request pre-encrypted variant identifiers (defaults to true)."
          type: "boolean"
          default: true
      responses:
        200:
          description: "Queried variants."
          schema:
            type: "array"
            items:
              type: "string"
        404:
          description: "Annotation or annotation value not found."
        default:
          $ref: "#/responses/errorResponse"
      security:
        - medco-jwt: ["medco-genomic-annotations"]

securityDefinitions:
  medco-jwt:
    type: "oauth2"
    flow: "application"
    tokenUrl: "https://medco-demo.epfl.ch/auth"
    description: "MedCo JWT token."

parameters:
  exploreSearchConceptRequest:
    in: "body"
    name: "searchConceptRequest"
    description: "MedCo-Explore ontology search concept request."
    required: true
    schema:
      $ref: "#/definitions/exploreSearchConcept"

  exploreSearchModifierRequest:
    in: "body"
    name: "searchModifierRequest"
    description: "MedCo-Explore ontology search modifier request."
    required: true
    schema:
      $ref: "#/definitions/exploreSearchModifier"

  exploreQueryRequest:
    in: "body"
    name: "queryRequest"
    description: "MedCo-Explore query request."
    required: true
    schema:
      type: "object"
      properties:
        id:
          type: "string"
          pattern: '^[\w:-]+$'
        query:
          $ref: "#/definitions/exploreQuery"

responses:
  errorResponse:
    description: "Error response."
    schema:
      type: "object"
      properties:
        message:
          type: "string"

  networkMetadataResponse:
    description: "Network metadata (public key and nodes list)."
    schema:
      type: "object"
      required: [nodeIndex]
      properties:
        public-key:
          type: "string"
          description: "Aggregated public key of the collective authority."
        nodes:
          type: "array"
          items:
            type: "object"
            required: [index]
            properties:
              index:
                type: "integer"
              name:
                type: "string"
              url:
                type: "string"
        nodeIndex:
          type: "integer"

  exploreSearchConceptResponse:
    description: "MedCo-Explore search concept query response."
    schema:
      type: "object"
      properties:
        search:
          $ref: "#/definitions/exploreSearchConcept"
        results:
          type: "array"
          items:
            $ref: "#/definitions/exploreSearchResultElement"

  exploreSearchModifierResponse:
    description: "MedCo-Explore search modifier query response."
    schema:
      type: "object"
      properties:
        search:
          $ref: "#/definitions/exploreSearchModifier"
        results:
          type: "array"
          items:
            $ref: "#/definitions/exploreSearchResultElement"

  exploreQueryResponse:
    description: "MedCo-Explore query response."
    schema:
      type: "object"
      properties:
        id:
          type: "string"
        query:
          $ref: "#/definitions/exploreQuery"
        result:
          $ref: "#/definitions/exploreQueryResultElement"

  statusResponse:
    description: "Node status response."
    schema:
      type: "object"
      properties:
        statusOK:
          type: "boolean"
        message:
          type: "string"

definitions:
  exploreSearchConcept:
    type: "object"
    required:
      - path
    properties:
      path:
        type: "string"
        pattern: '^\/$|^((\/[^\/]+)+\/?)$'

  exploreSearchModifier:
    type: "object"
    required:
      - path
      - appliedPath
      - appliedConcept
    properties:
      path:
        type: "string"
        pattern: '^\/$|^((\/[^\/]+)+\/?)$'
      appliedPath:
        type: "string"
        pattern: '^\/$|^((\/[^\/]+)+\/?)$'
      appliedConcept:
        type: "string"
        pattern: '^\/$|^((\/[^\/]+)+\/?)$'

  exploreSearchResultElement:
    type: "object"
    required: [leaf]
    properties:
      path:
        type: "string"
      name:
        type: "string"
      displayName:
        type: "string"
      code:
        type: "string"
      type:
        type: "string"
        enum:
          - concept
          - concept_container
          - concept_folder
          - modifier
          - modifier_container
          - modifier_folder
          - genomic_annotation
      leaf:
        type: "boolean"
      medcoEncryption:
        type: "object"
        required: [encrypted, id]
        properties:
          encrypted:
            type: "boolean"
          id:
            type: "integer"
            format: "int64"
          childrenIds:
            type: "array"
            items:
              type: "integer"
              format: "int64"
      metadata:
        type: "object"

  exploreQuery:
    description: "MedCo-Explore query"
    properties:
      type:
        $ref: "#/definitions/exploreQueryType"
      userPublicKey:
        type: "string"
        pattern: '^[\w=-]+$'
      panels:
        type: "array"
        description: "i2b2 panels (linked by an AND)"
        items:
          type: "object"
          required: [not]
          properties:
            not:
              type: "boolean"
              description: "exclude the i2b2 panel"
            items:
              type: "array"
              description: "i2b2 items (linked by an OR)"
              items:
                type: "object"
                required: [encrypted, queryTerm]
                properties:
                  queryTerm:
                    type: "string"
                    pattern: '^([\w=-]+)$|^((\/[^\/]+)+\/?)$'
                  operator:
                    type: "string"
                    enum:
                      - exists
                      - equals
                  value:
                    type: "string"
                    maxLength: 0
                  modifier:
                    type: "string"
                    pattern: '^([\w=-]+)$|^((\/[^\/]+)+\/?)$'
                  encrypted:
                    type: "boolean"

  exploreQueryType:
    type: "string"
    enum:
      - patient_list
      - count_per_site
      - count_per_site_obfuscated
      - count_per_site_shuffled
      - count_per_site_shuffled_obfuscated
      - count_global
      - count_global_obfuscated

  exploreQueryResultElement:
    type: "object"
    properties:
      status:
        type: "string"
        enum:
          - queued
          - pending
          - error
          - available
      encryptedCount:
        type: "string"
      encryptedPatientList:
        type: "array"
        items:
          type: "string"
      timers:
        type: "array"
        items:
          type: "object"
          required: [milliseconds]
          properties:
            name:
              type: "string"
            milliseconds:
              type: "integer"
              format: "int64"

  restApiAuthorization:
    type: "string"
    enum:
      - medco-network
      - medco-explore
      - medco-genomic-annotations
      - medco-node-status

  user:
    type: "object"
    properties:
      id:
        type: "string"
      token:
        type: "string"
      authorizations:
        type: "object"
        properties:
          restApi:
            type: "array"
            items:
              $ref: "#/definitions/restApiAuthorization"
          exploreQuery:
            type: "array"
            items:
              $ref: "#/definitions/exploreQueryType"