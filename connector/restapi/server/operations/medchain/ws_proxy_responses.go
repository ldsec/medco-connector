// Code generated by go-swagger; DO NOT EDIT.

package medchain

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// WsProxyForbiddenCode is the HTTP code returned for type WsProxyForbidden
const WsProxyForbiddenCode int = 403

/*WsProxyForbidden Request is valid and user is authenticated, but not authorized to perform this action.

swagger:response wsProxyForbidden
*/
type WsProxyForbidden struct {

	/*
	  In: Body
	*/
	Payload *WsProxyForbiddenBody `json:"body,omitempty"`
}

// NewWsProxyForbidden creates WsProxyForbidden with default headers values
func NewWsProxyForbidden() *WsProxyForbidden {

	return &WsProxyForbidden{}
}

// WithPayload adds the payload to the ws proxy forbidden response
func (o *WsProxyForbidden) WithPayload(payload *WsProxyForbiddenBody) *WsProxyForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the ws proxy forbidden response
func (o *WsProxyForbidden) SetPayload(payload *WsProxyForbiddenBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *WsProxyForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*WsProxyDefault Error response.

swagger:response wsProxyDefault
*/
type WsProxyDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *WsProxyDefaultBody `json:"body,omitempty"`
}

// NewWsProxyDefault creates WsProxyDefault with default headers values
func NewWsProxyDefault(code int) *WsProxyDefault {
	if code <= 0 {
		code = 500
	}

	return &WsProxyDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the ws proxy default response
func (o *WsProxyDefault) WithStatusCode(code int) *WsProxyDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the ws proxy default response
func (o *WsProxyDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the ws proxy default response
func (o *WsProxyDefault) WithPayload(payload *WsProxyDefaultBody) *WsProxyDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the ws proxy default response
func (o *WsProxyDefault) SetPayload(payload *WsProxyDefaultBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *WsProxyDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
