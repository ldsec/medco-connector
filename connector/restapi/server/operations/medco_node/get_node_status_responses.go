// Code generated by go-swagger; DO NOT EDIT.

package medco_node

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// GetNodeStatusOKCode is the HTTP code returned for type GetNodeStatusOK
const GetNodeStatusOKCode int = 200

/*GetNodeStatusOK Node status response.

swagger:response getNodeStatusOK
*/
type GetNodeStatusOK struct {

	/*
	  In: Body
	*/
	Payload *GetNodeStatusOKBody `json:"body,omitempty"`
}

// NewGetNodeStatusOK creates GetNodeStatusOK with default headers values
func NewGetNodeStatusOK() *GetNodeStatusOK {

	return &GetNodeStatusOK{}
}

// WithPayload adds the payload to the get node status o k response
func (o *GetNodeStatusOK) WithPayload(payload *GetNodeStatusOKBody) *GetNodeStatusOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get node status o k response
func (o *GetNodeStatusOK) SetPayload(payload *GetNodeStatusOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNodeStatusOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetNodeStatusDefault Error response.

swagger:response getNodeStatusDefault
*/
type GetNodeStatusDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *GetNodeStatusDefaultBody `json:"body,omitempty"`
}

// NewGetNodeStatusDefault creates GetNodeStatusDefault with default headers values
func NewGetNodeStatusDefault(code int) *GetNodeStatusDefault {
	if code <= 0 {
		code = 500
	}

	return &GetNodeStatusDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get node status default response
func (o *GetNodeStatusDefault) WithStatusCode(code int) *GetNodeStatusDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get node status default response
func (o *GetNodeStatusDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get node status default response
func (o *GetNodeStatusDefault) WithPayload(payload *GetNodeStatusDefaultBody) *GetNodeStatusDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get node status default response
func (o *GetNodeStatusDefault) SetPayload(payload *GetNodeStatusDefaultBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNodeStatusDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
